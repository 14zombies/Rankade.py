"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from typing import ClassVar, Dict, List, Optional, Type

from .Base import Page, RankadeObject, ResultList

@dataclass(kw_only=True, slots=True)
class Player(RankadeObject):
    """Represents a single player returned by the Rankade API."""
    id: str
    ghost: bool
    displayName: str
    icon: str
    username: Optional[str] = ...
    def __post_init__(self) -> None:
        ...

    @property
    def is_ghost(self) -> bool:
        """Convenience method returns self.ghost"""
        ...



@dataclass(kw_only=True, slots=True)
class Players(ResultList[Player], Page):
    """
    Represents a list of player objects returned by the Rankade server.
    Individual player objects returned by the server can be accessed in the same way as a regular list.
    """
    totalPlayers: int = ...
    _content_class: ClassVar[Type[RankadeObject]] = ...
    @property
    def ids(self) -> List[str]:
        """Player & ghost ids"""
        ...

    @property
    def ghosts(self) -> List[Player]:
        """All ghost players."""
        ...

    @property
    def display_names(self) -> List[str]:
        """
        Display names for players & ghosts.
        Ghost display names have a '*' prefix.
        """
        ...

    @property
    def display_names_clean(self) -> List[str]:
        """
        Display names for players & ghosts.
        Ghost display names will be returned without '*' prefix.
        """
        ...

    @property
    def usernames(self) -> List[str | None]:
        """Usernames for all players, ghosts not included."""
        ...

    @property
    def icons(self) -> Dict[str, str]:
        """All icon URIs for players & ghosts (if set.)"""
        ...




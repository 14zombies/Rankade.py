"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from datetime import datetime
from typing import ClassVar, List, Type

from .Base import Page, RankadeObject, ResultList
from .Faction import Faction, Factions
from .Game import Game
from .Player import Player, Players

@dataclass(kw_only=True, slots=True)
class Match(RankadeObject):
    """Represents a single Match object returned by Rankade"""
    weight: str
    weightLabel: str
    notes: str
    id: str
    externalId: str
    date: datetime
    registrationDate: datetime
    number: int
    summary: str
    type: str
    draw: bool
    game: Game
    factions: Factions
    def __post_init__(self) -> None:
        ...

    @property
    def is_draw(self) -> bool:
        """Convenience attribute - returns true if match was a draw."""
        ...

    @property
    def winning_factions(self) -> List[Faction]:
        """Returns winning factions."""
        ...

    @property
    def winning_players(self) -> List[Player]:
        """Returns players from winning factions"""
        ...

    @property
    def players(self) -> Players:
        """Returns all players from all factions."""
        ...

    @property
    def player_ids(self) -> List[str]:
        """Returns all player ids from all factions."""
        ...



@dataclass(kw_only=True, slots=True)
class Matches(ResultList[Match], Page):
    """
    Represents a list of match objects returned by the Rankade server.
    Individual match objects returned by the server can be accessed in the same way as a regular list.
    """
    totalMatches: int
    _content_class: ClassVar[Type[RankadeObject]] = ...
    def all_players(self) -> Players:
        """Returns all players from all factions of all matches."""
        ...




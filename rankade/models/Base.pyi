"""
This type stub file was generated by pyright.
"""

from abc import ABC
from collections import UserList
from dataclasses import dataclass
from typing import Any, ClassVar, List, MutableMapping, MutableSequence, Optional, Self, Type, TypeVar, Union

"""
This type stub file was generated by pyright.
"""
T = TypeVar("T", bound="RankadeObject")
@dataclass()
class RankadeObject(ABC):
    """
    Base class for all objects returned from the server.
    All models should inherit from this class.
    """
    ...


@dataclass(kw_only=True)
class ResultList(UserList[T], RankadeObject):
    """
    Base class for lists of items from server.

    :param List[rankade.models.Base.T] data: List of RankadeObjects returned by the sever.
    """
    _content_class: ClassVar[Type[RankadeObject]]
    data: List[T]
    @classmethod
    def from_dict(cls, data_dict: Union[MutableMapping[str, Any], MutableSequence[MutableMapping[str, Any]]]) -> Self:
        """
        Create a ResultList instance from a dict.
        """
        ...



@dataclass(kw_only=True)
class Page:
    """
    Base class for page of items from server .

    :param List[rankade.models.Base.T] data: List RankadeObject objects.
    :param int page: Current page number.
    :param int totalPages: Total Pages.
    :param int rowsForPage: Max number of items on page.

    """
    page: int = ...
    totalPages: int = ...
    rowsForPage: Optional[int] = ...



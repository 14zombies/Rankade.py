"""
This type stub file was generated by pyright.
"""

import logging
from dataclasses import dataclass
from typing import Any, MutableMapping, Optional, TypeAlias, Union

import aiohttp

from .Endpoint import Endpoint
from .Token import Token

"""
This type stub file was generated by pyright.
"""
logger: logging.Logger = ...
JSON: TypeAlias = ...
HEADERS: TypeAlias = ...
PARAMS: TypeAlias = ...
@dataclass()
class Api:
    """
    Wrapper around aiohttp.

    It manages Authorisation and requests to the Rankade API.
    """
    _base_url: str
    _key: Optional[str] = ...
    _secret: Optional[str] = ...
    _session: Optional[aiohttp.ClientSession] = ...
    _token: Optional[Token] = ...
    def __init__(self, key_or_token: str, secret: Optional[str] = ..., base_url: Optional[str] = ..., session: Optional[aiohttp.ClientSession] = ...) -> None:
        """
        :param str key_or_token: Rankade key or token.
        :param Optional[str] secret: Rankade secret.
        :param Optional[str] base_url: Scheme and Resource to send requests to. Defaults to "https://api.rankade.com/public/api/1/"
        :param Optional[aiohttp.ClientSession] session: aiohttp ClientSession to use.
        """
        ...

    @property
    def token(self) -> Optional[Token]:
        """Representation of a JWT."""
        ...

    @token.setter
    def token(self, value: Union[str, Token, None]) -> None:
        ...

    async def request(self, endpoint: Endpoint, headers: HEADERS = ..., params: PARAMS = ..., json: JSON = ..., **kwargs: Any) -> MutableMapping[str, Any]:
        """
        Public facing interface for API class, will call 1 of 2 methods depending
        if the request is expecting a paginated response or not.

        :param Endpoint endpoint: Contains basic config for the request, including if authorisation is required, will the response be paginated, and what http method & path to use. See {py:class}`Endpoint <rankade.api.Endpoint.Endpoint>` for a full list.
        :param rankade.api.Api.HEADERS headers: A dict representing any headers to be passed, normally this is internal use only for Bearer Auth header.
        :param rankade.api.Api.PARAMS params: Parameters to use with the request.
        :param rankade.api.Api.JSON json: JSON to send to the server.
        :param **kwargs: Used to keep the call site as clean as possible, we can make almost all the requests with some mix
            of the above parameters. There are a few parameters that require passing through to the request. {py:class}`Endpoint_Request <rankade.api.Endpoint.Endpoint_Request>` for a full list.

        """
        ...



